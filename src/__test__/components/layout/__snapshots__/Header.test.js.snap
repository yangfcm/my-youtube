// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Header component Test Header when there is no user auth info returned should render component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(Connect(GoogleAuthWrapper))>
        <Connect(GoogleAuthWrapper)
          auth={
            Object {
              "signedIn": null,
              "user": null,
            }
          }
          dispatch={[Function]}
        >
          <GoogleAuthWrapper
            auth={
              Object {
                "signedIn": null,
                "user": null,
              }
            }
            dispatch={[Function]}
            signIn={[Function]}
            signOut={[Function]}
          >
            <Header
              auth={
                Object {
                  "signedIn": null,
                  "user": null,
                }
              }
              dispatch={[Function]}
              googleSignin={[Function]}
              googleSignout={[Function]}
              googleUser={null}
              signIn={[Function]}
              signOut={[Function]}
            >
              <nav
                className="navbar navbar-light bg-light mb-4"
              >
                <Link
                  className="navbar-brand"
                  to="/"
                >
                  <LinkAnchor
                    className="navbar-brand"
                    href="/"
                    navigate={[Function]}
                  >
                    <a
                      className="navbar-brand"
                      href="/"
                      onClick={[Function]}
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="video"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        style={
                          Object {
                            "color": "#FF0101",
                          }
                        }
                        swapOpacity={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-video fa-w-18 fa-lg "
                          data-icon="video"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={
                            Object {
                              "color": "#FF0101",
                            }
                          }
                          viewBox="0 0 576 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M336.2 64H47.8C21.4 64 0 85.4 0 111.8v288.4C0 426.6 21.4 448 47.8 448h288.4c26.4 0 47.8-21.4 47.8-47.8V111.8c0-26.4-21.4-47.8-47.8-47.8zm189.4 37.7L416 177.3v157.4l109.6 75.5c21.2 14.6 50.4-.3 50.4-25.8V127.5c0-25.4-29.1-40.4-50.4-25.8z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                      <span
                        className="font-weight-bold mx-2 d-none d-sm-inline"
                      >
                        FanTube
                         
                      </span>
                    </a>
                  </LinkAnchor>
                </Link>
                <div
                  className="flex-grow-1 d-flex align-items-center justify-content-end"
                >
                  <withRouter(SearchForm)>
                    <SearchForm
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        }
                      }
                      match={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        }
                      }
                    >
                      <form
                        className="d-flex"
                        onSubmit={[Function]}
                      >
                        <input
                          className="form-control"
                          name="search"
                          onChange={[Function]}
                          placeholder="Search video..."
                          type="text"
                          value=""
                        />
                        <button
                          className="btn btn-outline-dark mx-2"
                          type="submit"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="search"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            swapOpacity={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-search fa-w-16 "
                              data-icon="search"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                        </button>
                      </form>
                    </SearchForm>
                  </withRouter(SearchForm)>
                </div>
              </nav>
            </Header>
          </GoogleAuthWrapper>
        </Connect(GoogleAuthWrapper)>
      </Connect(Connect(GoogleAuthWrapper))>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Test Header component Test Header when user is logged in should render component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(Connect(GoogleAuthWrapper))>
        <Connect(GoogleAuthWrapper)
          auth={
            Object {
              "signedIn": true,
              "user": Object {
                "avatar": "https://lh3.googleusercontent.com/a-/AOh14GgHZ_IO2RUfg770gLs9V6UOsJaDMsWmGKP4AUna",
                "email": "test@gmail.com",
                "firstName": "Test",
                "lastName": "Test",
                "username": "Test Test",
              },
            }
          }
          dispatch={[Function]}
        >
          <GoogleAuthWrapper
            auth={
              Object {
                "signedIn": true,
                "user": Object {
                  "avatar": "https://lh3.googleusercontent.com/a-/AOh14GgHZ_IO2RUfg770gLs9V6UOsJaDMsWmGKP4AUna",
                  "email": "test@gmail.com",
                  "firstName": "Test",
                  "lastName": "Test",
                  "username": "Test Test",
                },
              }
            }
            dispatch={[Function]}
            signIn={[Function]}
            signOut={[Function]}
          >
            <Header
              auth={
                Object {
                  "signedIn": true,
                  "user": Object {
                    "avatar": "https://lh3.googleusercontent.com/a-/AOh14GgHZ_IO2RUfg770gLs9V6UOsJaDMsWmGKP4AUna",
                    "email": "test@gmail.com",
                    "firstName": "Test",
                    "lastName": "Test",
                    "username": "Test Test",
                  },
                }
              }
              dispatch={[Function]}
              googleSignin={[Function]}
              googleSignout={[Function]}
              googleUser={null}
              signIn={[Function]}
              signOut={[Function]}
            >
              <nav
                className="navbar navbar-light bg-light mb-4"
              >
                <Link
                  className="navbar-brand"
                  to="/"
                >
                  <LinkAnchor
                    className="navbar-brand"
                    href="/"
                    navigate={[Function]}
                  >
                    <a
                      className="navbar-brand"
                      href="/"
                      onClick={[Function]}
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="video"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        style={
                          Object {
                            "color": "#FF0101",
                          }
                        }
                        swapOpacity={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-video fa-w-18 fa-lg "
                          data-icon="video"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={
                            Object {
                              "color": "#FF0101",
                            }
                          }
                          viewBox="0 0 576 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M336.2 64H47.8C21.4 64 0 85.4 0 111.8v288.4C0 426.6 21.4 448 47.8 448h288.4c26.4 0 47.8-21.4 47.8-47.8V111.8c0-26.4-21.4-47.8-47.8-47.8zm189.4 37.7L416 177.3v157.4l109.6 75.5c21.2 14.6 50.4-.3 50.4-25.8V127.5c0-25.4-29.1-40.4-50.4-25.8z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                      <span
                        className="font-weight-bold mx-2 d-none d-sm-inline"
                      >
                        FanTube
                         
                      </span>
                    </a>
                  </LinkAnchor>
                </Link>
                <div
                  className="flex-grow-1 d-flex align-items-center justify-content-end"
                >
                  <withRouter(SearchForm)>
                    <SearchForm
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        }
                      }
                      match={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        }
                      }
                    >
                      <form
                        className="d-flex"
                        onSubmit={[Function]}
                      >
                        <input
                          className="form-control"
                          name="search"
                          onChange={[Function]}
                          placeholder="Search video..."
                          type="text"
                          value=""
                        />
                        <button
                          className="btn btn-outline-dark mx-2"
                          type="submit"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="search"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            swapOpacity={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-search fa-w-16 "
                              data-icon="search"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                        </button>
                      </form>
                    </SearchForm>
                  </withRouter(SearchForm)>
                  <UserImage
                    user={
                      Object {
                        "avatar": "https://lh3.googleusercontent.com/a-/AOh14GgHZ_IO2RUfg770gLs9V6UOsJaDMsWmGKP4AUna",
                        "email": "test@gmail.com",
                        "firstName": "Test",
                        "lastName": "Test",
                        "username": "Test Test",
                      }
                    }
                  >
                    <div
                      className="mr-2"
                      style={
                        Object {
                          "position": "relative",
                        }
                      }
                    >
                      <div
                        id="dropdown"
                        onClick={[Function]}
                        style={
                          Object {
                            "cursor": "pointer",
                            "height": "55px",
                          }
                        }
                      >
                              
                        <img
                          alt="Test Test"
                          src="https://lh3.googleusercontent.com/a-/AOh14GgHZ_IO2RUfg770gLs9V6UOsJaDMsWmGKP4AUna"
                          style={
                            Object {
                              "borderRadius": "50%",
                              "maxHeight": "100%",
                            }
                          }
                        />
                      </div>
                    </div>
                  </UserImage>
                </div>
              </nav>
            </Header>
          </GoogleAuthWrapper>
        </Connect(GoogleAuthWrapper)>
      </Connect(Connect(GoogleAuthWrapper))>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`Test Header component Test Header when user is not logged in should render component 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(Connect(GoogleAuthWrapper))
        googleSignin={[MockFunction]}
      >
        <Connect(GoogleAuthWrapper)
          auth={
            Object {
              "signedIn": false,
              "user": null,
            }
          }
          dispatch={[Function]}
          googleSignin={[MockFunction]}
        >
          <GoogleAuthWrapper
            auth={
              Object {
                "signedIn": false,
                "user": null,
              }
            }
            dispatch={[Function]}
            googleSignin={[MockFunction]}
            signIn={[Function]}
            signOut={[Function]}
          >
            <Header
              auth={
                Object {
                  "signedIn": false,
                  "user": null,
                }
              }
              dispatch={[Function]}
              googleSignin={[MockFunction]}
              googleSignout={[Function]}
              googleUser={null}
              signIn={[Function]}
              signOut={[Function]}
            >
              <nav
                className="navbar navbar-light bg-light mb-4"
              >
                <Link
                  className="navbar-brand"
                  to="/"
                >
                  <LinkAnchor
                    className="navbar-brand"
                    href="/"
                    navigate={[Function]}
                  >
                    <a
                      className="navbar-brand"
                      href="/"
                      onClick={[Function]}
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="video"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size="lg"
                        spin={false}
                        style={
                          Object {
                            "color": "#FF0101",
                          }
                        }
                        swapOpacity={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-video fa-w-18 fa-lg "
                          data-icon="video"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={
                            Object {
                              "color": "#FF0101",
                            }
                          }
                          viewBox="0 0 576 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M336.2 64H47.8C21.4 64 0 85.4 0 111.8v288.4C0 426.6 21.4 448 47.8 448h288.4c26.4 0 47.8-21.4 47.8-47.8V111.8c0-26.4-21.4-47.8-47.8-47.8zm189.4 37.7L416 177.3v157.4l109.6 75.5c21.2 14.6 50.4-.3 50.4-25.8V127.5c0-25.4-29.1-40.4-50.4-25.8z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                      <span
                        className="font-weight-bold mx-2 d-none d-sm-inline"
                      >
                        FanTube
                         
                      </span>
                    </a>
                  </LinkAnchor>
                </Link>
                <div
                  className="flex-grow-1 d-flex align-items-center justify-content-end"
                >
                  <withRouter(SearchForm)>
                    <SearchForm
                      history={
                        Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        }
                      }
                      match={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        }
                      }
                    >
                      <form
                        className="d-flex"
                        onSubmit={[Function]}
                      >
                        <input
                          className="form-control"
                          name="search"
                          onChange={[Function]}
                          placeholder="Search video..."
                          type="text"
                          value=""
                        />
                        <button
                          className="btn btn-outline-dark mx-2"
                          type="submit"
                        >
                          <FontAwesomeIcon
                            border={false}
                            className=""
                            fixedWidth={false}
                            flip={null}
                            icon="search"
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            swapOpacity={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-search fa-w-16 "
                              data-icon="search"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                        </button>
                      </form>
                    </SearchForm>
                  </withRouter(SearchForm)>
                  <div
                    className="d-flex align-items-center"
                    style={
                      Object {
                        "height": "55px",
                      }
                    }
                  >
                    <button
                      className="btn btn-primary"
                      onClick={[Function]}
                    >
                      <FontAwesomeIcon
                        border={false}
                        className=""
                        fixedWidth={false}
                        flip={null}
                        icon="sign-in-alt"
                        inverse={false}
                        listItem={false}
                        mask={null}
                        pull={null}
                        pulse={false}
                        rotation={null}
                        size={null}
                        spin={false}
                        swapOpacity={false}
                        symbol={false}
                        title=""
                        transform={null}
                      >
                        <svg
                          aria-hidden="true"
                          className="svg-inline--fa fa-sign-in-alt fa-w-16 "
                          data-icon="sign-in-alt"
                          data-prefix="fas"
                          focusable="false"
                          role="img"
                          style={Object {}}
                          viewBox="0 0 512 512"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M416 448h-84c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h84c17.7 0 32-14.3 32-32V160c0-17.7-14.3-32-32-32h-84c-6.6 0-12-5.4-12-12V76c0-6.6 5.4-12 12-12h84c53 0 96 43 96 96v192c0 53-43 96-96 96zm-47-201L201 79c-15-15-41-4.5-41 17v96H24c-13.3 0-24 10.7-24 24v96c0 13.3 10.7 24 24 24h136v96c0 21.5 26 32 41 17l168-168c9.3-9.4 9.3-24.6 0-34z"
                            fill="currentColor"
                            style={Object {}}
                          />
                        </svg>
                      </FontAwesomeIcon>
                         
                      Sign In
                    </button>
                  </div>
                </div>
              </nav>
            </Header>
          </GoogleAuthWrapper>
        </Connect(GoogleAuthWrapper)>
      </Connect(Connect(GoogleAuthWrapper))>
    </Router>
  </BrowserRouter>
</Provider>
`;
